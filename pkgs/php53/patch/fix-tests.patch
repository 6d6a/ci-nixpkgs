diff --git a/ext/curl/tests/curl_basic_010.phpt b/ext/curl/tests/curl_basic_010.phpt
index 0fc2fe6..13fbd0c 100644
--- a/ext/curl/tests/curl_basic_010.phpt
+++ b/ext/curl/tests/curl_basic_010.phpt
@@ -26,5 +26,5 @@ curl_close($ch);
 
 ?>
 --EXPECTF--
-%unicode|string%(%d) "%r(Couldn't resolve proxy|Could not resolve proxy:|Could not resolve host:)%r %s"
+string(%d) "%r(Couldn't resolve proxy|Could not resolve proxy:|Could not resolve host:|Could not resolve:|Unsupported proxy syntax in)%r %s"
 int(5)
diff --git a/ext/dom/tests/DOMDocument_validate_external_dtd.phpt b/ext/dom/tests/DOMDocument_validate_external_dtd.phpt
index 51a044c..39dd70e 100644
--- a/ext/dom/tests/DOMDocument_validate_external_dtd.phpt
+++ b/ext/dom/tests/DOMDocument_validate_external_dtd.phpt
@@ -12,8 +12,9 @@ require_once dirname(__FILE__) .'/skipif.inc';
 // reusing existing xml: http://cvs.php.net/viewvc.cgi/php-src/ext/dom/tests/dom.xml?view=co&content-type=text%2Fplain
 // reusing existing dtd: http://cvs.php.net/viewvc.cgi/php-src/ext/dom/tests/dom.ent?view=co&content-type=text%2Fplain
 $dom = new DOMDocument('1.0');
+$dom->substituteEntities = true;
 $dom->load(dirname(__FILE__).'/dom.xml');
 var_dump($dom->validate());
 ?>
---EXPECTF--
+--EXPECT--
 bool(true)
diff --git a/ext/dom/tests/dom005.phpt b/ext/dom/tests/dom005.phpt
index 715aec4..b6df26e 100644
--- a/ext/dom/tests/dom005.phpt
+++ b/ext/dom/tests/dom005.phpt
@@ -21,13 +21,23 @@ function adjustDoctype($xml) {
 --- save as XML
 <?xml version="1.0" standalone="yes"?>
 <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
-<html><head><title>Hello world</title></head><body>
+<html>
+<head>
+<title>Hello world</title>
+</head>
+<body>
 This is a not well-formed<br/>
 html files with undeclared entities&#xA0;
-</body></html>
+</body>
+</html>
 --- save as HTML
 <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
-<html><head><title>Hello world</title></head><body>
+<html>
+<head>
+<title>Hello world</title>
+</head>
+<body>
 This is a not well-formed<br>
 html files with undeclared entities&nbsp;
-</body></html>
+</body>
+</html>
diff --git a/ext/fileinfo/tests/finfo_file_002.phpt b/ext/fileinfo/tests/finfo_file_002.phpt
index c3f8388..6cd46f5 100644
--- a/ext/fileinfo/tests/finfo_file_002.phpt
+++ b/ext/fileinfo/tests/finfo_file_002.phpt
@@ -34,5 +34,5 @@ array(8) {
   ["%s/resources/test.png"]=>
   string(9) "image/png"
   ["%s/resources/test.ppt"]=>
-  string(29) "application/vnd.ms-powerpoint"
+  string(29) "application/msword"
 }
diff --git a/ext/gd/tests/bug48801_1.phpt b/ext/gd/tests/bug48801_1.phpt
index 11af80c..0ab9a73 100644
--- a/ext/gd/tests/bug48801_1.phpt
+++ b/ext/gd/tests/bug48801_1.phpt
@@ -20,6 +20,6 @@ echo '(' . $bbox[6] . ', ' . $bbox[7] . ")\n";
 ?>
 --EXPECTF--
 (-1, 15)
-(156, 15)
-(156, -48)
+(155, 15)
+(155, -48)
 (-1, -48)
diff --git a/ext/pcre/tests/bug37911.phpt b/ext/pcre/tests/bug37911.phpt
index f788119..4f3cb35 100644
--- a/ext/pcre/tests/bug37911.phpt
+++ b/ext/pcre/tests/bug37911.phpt
@@ -37,5 +37,5 @@ array(3) {
   string(4) "blub"
 }
 
-Warning: preg_replace_callback(): Numeric named subpatterns are not allowed in %sbug37911.php on line 14
+Warning: preg_replace_callback(): Compilation failed: %s name must start with a non-digit at offset %d in %sbug37911.php on line %d
 NULL
diff --git a/ext/pcre/tests/match_flags3.phpt b/ext/pcre/tests/match_flags3.phpt
index f22205e..6511c71 100644
--- a/ext/pcre/tests/match_flags3.phpt
+++ b/ext/pcre/tests/match_flags3.phpt
@@ -18,7 +18,6 @@ var_dump(preg_match('/(?P<3>)/', ''));
 
 ?>
 --EXPECTF--
-
 Warning: preg_match(): Empty regular expression in %smatch_flags3.php on line 3
 bool(false)
 int(1)
@@ -42,5 +41,5 @@ array(1) {
   }
 }
 
-Warning: preg_match(): Numeric named subpatterns are not allowed in %smatch_flags3.php on line 14
+Warning: preg_match(): Compilation failed: %s name must start with a non-digit at offset %d in %smatch_flags3.php on line %d
 bool(false)
diff --git a/ext/simplexml/tests/008.phpt b/ext/simplexml/tests/008.phpt
index 8734ba4..dba2df5 100644
--- a/ext/simplexml/tests/008.phpt
+++ b/ext/simplexml/tests/008.phpt
@@ -1,9 +1,9 @@
 --TEST--
-SimpleXML: XPath 
+SimpleXML: XPath
 --SKIPIF--
 <?php if (!extension_loaded("simplexml")) print "skip"; ?>
 --FILE--
-<?php 
+<?php
 
 $xml =<<<EOF
 <?xml version='1.0'?>
@@ -25,9 +25,9 @@ EOF;
 $sxe = simplexml_load_string($xml);
 
 var_dump($sxe->xpath("elem1/elem2/elem3/elem4"));
-//valid expression 
+//valid expression
 var_dump($sxe->xpath("***"));
-//invalid expression 
+//invalid expression
 var_dump($sxe->xpath("**"));
 ?>
 --EXPECTF--
@@ -42,7 +42,5 @@ array(1) {
 array(0) {
 }
 
-Warning: SimpleXMLElement::xpath(): Invalid expression in %s on line %d
-
-Warning: SimpleXMLElement::xpath(): xmlXPathEval: evaluation failed in %s on line %d
+Warning: SimpleXMLElement::xpath(): Invalid expression in %s on line %d%A
 bool(false)
diff --git a/ext/sockets/tests/socket_strerror.phpt b/ext/sockets/tests/socket_strerror.phpt
index 7985fad..aef56e5 100644
--- a/ext/sockets/tests/socket_strerror.phpt
+++ b/ext/sockets/tests/socket_strerror.phpt
@@ -20,8 +20,7 @@ fa@php.net
     }
 ?>
 --EXPECTF--
-
-Warning: socket_strerror() expects exactly 1 parameter, 0 given in %s on line %i
+Warning: socket_strerror() expects exactly 1 parameter, 0 given in %s on line %d
 string(7) "Success"
 string(23) "Operation not permitted"
 string(25) "No such file or directory"
@@ -138,7 +137,7 @@ string(12) "Host is down"
 string(16) "No route to host"
 string(29) "Operation already in progress"
 string(25) "Operation now in progress"
-string(21) "Stale NFS file handle"
+string(%d) "Stale%sfile handle"
 string(24) "Structure needs cleaning"
 string(27) "Not a XENIX named type file"
 string(29) "No XENIX semaphores available"
diff --git a/ext/standard/tests/file/bug52820.phpt b/ext/standard/tests/file/bug52820.phpt
index 19d0e9e..e51c27e 100644
--- a/ext/standard/tests/file/bug52820.phpt
+++ b/ext/standard/tests/file/bug52820.phpt
@@ -1,49 +1,63 @@
---TEST--
-Bug #52820 (writes to fopencookie FILE* not commited when seeking the stream)
---SKIPIF--
-<?php
-/* unfortunately no standard function does a cast to FILE*, so we need
- * curl to test this */
-if (!extension_loaded("curl")) exit("skip curl extension not loaded");
-$handle=curl_init('http://127.0.0.1:37349/');
-curl_setopt($handle, CURLOPT_VERBOSE, true);
-curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);
-if (!curl_setopt($handle, CURLOPT_STDERR, fopen("php://memory", "w+")))
-    die("skip fopencookie not supported on this platform");
---FILE--
-<?php
-function do_stuff($url) {
-    $handle=curl_init('http://127.0.0.1:37349/');
-    curl_setopt($handle, CURLOPT_VERBOSE, true);
-    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);
-    curl_setopt($handle, CURLOPT_STDERR, $o = fopen($url, "w+"));
-    curl_exec($handle);
-    echo "About to rewind!\n";
-    rewind($o);
-    echo stream_get_contents($o);
-    return $o;
-}
-
-echo "temp stream (close after):\n";
-fclose(do_stuff("php://temp"));
-
-echo "\nmemory stream (close after):\n";
-fclose(do_stuff("php://memory"));
-
-echo "\nDone.\n";
---EXPECTF--
-temp stream (close after):
-About to rewind!
-* About to connect() to 127.0.0.1 port 37349%r.*%r
-*   Trying 127.0.0.1...%A* Connection refused
-* couldn't connect to host%S
-* Closing connection #0
-
-memory stream (close after):
-About to rewind!
-* About to connect() to 127.0.0.1 port 37349%r.*%r
-*   Trying 127.0.0.1...%A* Connection refused
-* couldn't connect to host%S
-* Closing connection #0
-
-Done.
+--TEST--
+Bug #52820 (writes to fopencookie FILE* not committed when seeking the stream)
+--SKIPIF--
+<?php
+if (!function_exists('zend_leak_variable'))
+   die("skip only for debug builds");
+/* unfortunately no standard function does a cast to FILE*, so we need
+ * curl to test this */
+if (!extension_loaded("curl")) exit("skip curl extension not loaded");
+$handle=curl_init('http://127.0.0.1:37349/');
+curl_setopt($handle, CURLOPT_VERBOSE, true);
+curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);
+if (!curl_setopt($handle, CURLOPT_STDERR, fopen("php://memory", "w+")))
+    die("skip fopencookie not supported on this platform");
+--FILE--
+<?php
+function do_stuff($url) {
+    $handle=curl_init('http://127.0.0.1:37349/');
+    curl_setopt($handle, CURLOPT_VERBOSE, true);
+    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);
+    curl_setopt($handle, CURLOPT_STDERR, $o = fopen($url, "w+"));
+    curl_exec($handle);
+    echo "About to rewind!\n";
+    rewind($o);
+    echo stream_get_contents($o);
+    return $o;
+}
+
+echo "temp stream (close after):\n";
+fclose(do_stuff("php://temp"));
+
+echo "\nmemory stream (close after):\n";
+fclose(do_stuff("php://memory"));
+
+echo "\ntemp stream (leak):\n";
+zend_leak_variable(do_stuff("php://temp"));
+
+echo "\nmemory stream (leak):\n";
+zend_leak_variable(do_stuff("php://memory"));
+
+echo "\nDone.\n";
+--EXPECTF--
+temp stream (close after):
+About to rewind!
+* %ATrying 127.0.0.1...%AConnection refused%A
+* Closing connection%A%d
+
+memory stream (close after):
+About to rewind!
+* %ATrying 127.0.0.1...%AConnection refused%A
+* Closing connection%A%d
+
+temp stream (leak):
+About to rewind!
+* %ATrying 127.0.0.1...%AConnection refused%A
+* Closing connection%A%d
+
+memory stream (leak):
+About to rewind!
+* %ATrying 127.0.0.1...%AConnection refused%A
+* Closing connection%A%d
+
+Done.
diff --git a/ext/standard/tests/general_functions/bug39322.phpt b/ext/standard/tests/general_functions/bug39322.phpt
index a9f83c7..b24bd49 100644
--- a/ext/standard/tests/general_functions/bug39322.phpt
+++ b/ext/standard/tests/general_functions/bug39322.phpt
@@ -26,7 +26,7 @@ echo "Done!\n";
 --EXPECTF--
 array(8) {
   ["command"]=>
-  string(14) "/bin/sleep 120"
+  string(%d) "/bin/sleep 120"
   ["pid"]=>
   int(%d)
   ["running"]=>
diff --git a/ext/standard/tests/general_functions/proc_open02.phpt b/ext/standard/tests/general_functions/proc_open02.phpt
index d5d878e..fc4ca7d 100644
--- a/ext/standard/tests/general_functions/proc_open02.phpt
+++ b/ext/standard/tests/general_functions/proc_open02.phpt
@@ -34,7 +34,7 @@ echo "Done!\n";
 bool(true)
 array(8) {
   ["command"]=>
-  string(12) "/bin/sleep 2"
+  string(%d) "/bin/sleep 2"
   ["pid"]=>
   int(%d)
   ["running"]=>
@@ -53,7 +53,7 @@ array(8) {
 bool(true)
 array(8) {
   ["command"]=>
-  string(12) "/bin/sleep 2"
+  string(%d) "/bin/sleep 2"
   ["pid"]=>
   int(%d)
   ["running"]=>
diff --git a/ext/standard/tests/network/http-stream.phpt b/ext/standard/tests/network/http-stream.phpt
index 99245f7..45c5cb6 100644
--- a/ext/standard/tests/network/http-stream.phpt
+++ b/ext/standard/tests/network/http-stream.phpt
@@ -3,16 +3,22 @@ http-stream test
 --SKIPIF--
 <?php
 if (getenv("SKIP_SLOW_TESTS")) die("skip slow test");
-if (getenv("SKIP_ONLINE_TESTS")) die("skip online test");
 if (!extension_loaded("dom")) die("skip dom extension is not present");
+require __DIR__.'/../http/server.inc';
+http_server_skipif('tcp://127.0.0.1:12342');
 ?>
 --INI--
 allow_url_fopen=1
 --FILE--
 <?php
+require __DIR__.'/../http/server.inc';
+
+$pid = http_server("tcp://127.0.0.1:12342", [__DIR__."/news.rss"]);
+
 $d = new DomDocument;
-$e = $d->load("http://php.net/news.rss");
+$e = $d->load("http://127.0.0.1:12342/news.rss");
 echo "ALIVE\n";
+http_server_kill($pid);
 ?>
---EXPECTF--
+--EXPECT--
 ALIVE
diff --git a/ext/standard/tests/streams/bug64770.phpt b/ext/standard/tests/streams/bug64770.phpt
index 785c423..bb904d7 100644
--- a/ext/standard/tests/streams/bug64770.phpt
+++ b/ext/standard/tests/streams/bug64770.phpt
@@ -1,5 +1,5 @@
 --TEST--
-Bug #64770 stream_select() fails with pipes from proc_open() 
+Bug #64770 stream_select() fails with pipes from proc_open()
 --FILE--
 <?php
 
@@ -9,7 +9,7 @@ $descs = array(
 	2 => array('pipe', 'w'), // strerr
 );
 
-$other_opts = array('suppress_errors' => false, 'binary_pipes' => true);
+$other_opts = array('suppress_errors' => false);
 
 $cmd = (substr(PHP_OS, 0, 3) == 'WIN') ? 'dir' : 'ls';
 $p = proc_open($cmd, $descs, $pipes, '.', NULL, $other_opts);
@@ -17,7 +17,7 @@ $p = proc_open($cmd, $descs, $pipes, '.', NULL, $other_opts);
 if (is_resource($p)) {
 	$data = '';
 
-	while (1) {	
+	while (1) {
 		$w = $e = NULL;
 		$n = stream_select($pipes, $w, $e, 300);
 
diff --git a/ext/standard/tests/strings/substr_compare.phpt b/ext/standard/tests/strings/substr_compare.phpt
index 206ccd5..248bc12 100644
--- a/ext/standard/tests/strings/substr_compare.phpt
+++ b/ext/standard/tests/strings/substr_compare.phpt
@@ -7,7 +7,7 @@ var_dump(substr_compare("abcde", "bc", 1, 2));
 var_dump(substr_compare("abcde", "bcg", 1, 2));
 var_dump(substr_compare("abcde", "BC", 1, 2, true));
 var_dump(substr_compare("abcde", "bc", 1, 3));
-var_dump(substr_compare("abcde", "cd", 1, 2));
+var_dump(substr_compare("abcde", "cd", 1, 2) < 0);
 var_dump(substr_compare("abcde", "abc", 5, 1));
 var_dump(substr_compare("abcde", "abcdef", -10, 10));
 
@@ -23,7 +23,7 @@ int(0)
 int(0)
 int(0)
 int(1)
-int(-1)
+bool(true)
 
 Warning: substr_compare(): The start position cannot exceed initial string length in %s on line %d
 bool(false)
diff --git a/ext/standard/tests/time/strptime_basic.phpt b/ext/standard/tests/time/strptime_basic.phpt
index a3fa435..f352e9d 100644
--- a/ext/standard/tests/time/strptime_basic.phpt
+++ b/ext/standard/tests/time/strptime_basic.phpt
@@ -1,12 +1,12 @@
 --TEST--
-Test strptime() function : basic functionality 
+Test strptime() function : basic functionality
 --SKIPIF--
-<?php 
-	if (!function_exists('strptime')) { 
-		die("skip - strptime() function not available in this build"); 
-	}	 
+<?php
+	if (!function_exists('strptime')) {
+		die("skip - strptime() function not available in this build");
+	}
+        if(PHP_OS == 'Darwin') die("skip - strptime() behaves differently on Darwin");
 ?>
-
 --FILE--
 <?php
 /* Prototype  : array strptime  ( string $date  , string $format  )
@@ -15,15 +15,15 @@ Test strptime() function : basic functionality
 */
 
 $orig = setlocale(LC_ALL, 'C');
-date_default_timezone_set("GMT"); 
+date_default_timezone_set("GMT");
 
 echo "*** Testing strptime() : basic functionality ***\n";
 
 $input = "10:00:00 AM July 2 1963";
 $tstamp = strtotime($input);
- 
+
 $str = strftime("%r %B%e %Y %Z", $tstamp);
-var_dump(strptime($str, '%H:%M:%S %p %B %d %Y %Z'));
+var_dump(strptime($str, '%H:%M:%S %p %B %d %Y'));
 
 $str = strftime("%T %D", $tstamp);
 var_dump(strptime($str, '%H:%M:%S %m/%d/%y'));
@@ -34,7 +34,7 @@ var_dump(strptime($str, '%A %B %e %R'));
 setlocale(LC_ALL, $orig);
 ?>
 ===DONE===
---EXPECTF--
+--EXPECT--
 *** Testing strptime() : basic functionality ***
 array(9) {
   ["tm_sec"]=>
@@ -54,7 +54,7 @@ array(9) {
   ["tm_yday"]=>
   int(182)
   ["unparsed"]=>
-  string(3) "GMT"
+  string(4) " GMT"
 }
 array(9) {
   ["tm_sec"]=>
diff --git a/ext/tidy/tests/003.phpt b/ext/tidy/tests/003.phpt
index 7201d6a..df4cd18 100644
--- a/ext/tidy/tests/003.phpt
+++ b/ext/tidy/tests/003.phpt
@@ -3,15 +3,15 @@ tidy_clean_repair()
 --SKIPIF--
 <?php if (!extension_loaded("tidy")) print "skip"; ?>
 --FILE--
-<?php 
+<?php
 
 	$a = tidy_parse_string("<HTML></HTML>");
 	tidy_clean_repair($a);
 	echo tidy_get_output($a);
 
 ?>
---EXPECT--
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
+--EXPECTF--
+<!DOCTYPE html%S>
 <html>
 <head>
 <title></title>
diff --git a/ext/tidy/tests/004.phpt b/ext/tidy/tests/004.phpt
index d13c37d..0c73b6c 100644
--- a/ext/tidy/tests/004.phpt
+++ b/ext/tidy/tests/004.phpt
@@ -3,7 +3,7 @@ tidy_diagnose()
 --SKIPIF--
 <?php if (!extension_loaded("tidy")) print "skip"; ?>
 --FILE--
-<?php 
+<?php
 $a = tidy_parse_string('<HTML></HTML>');
 var_dump(tidy_diagnose($a));
 echo str_replace("\r", "", tidy_get_error_buffer($a));
@@ -19,13 +19,13 @@ $a = tidy_parse_string($html);
 var_dump(tidy_diagnose($a));
 echo tidy_get_error_buffer($a);
 ?>
---EXPECT--
+--EXPECTF--
 bool(true)
 line 1 column 1 - Warning: missing <!DOCTYPE> declaration
 line 1 column 7 - Warning: discarding unexpected </html>
 line 1 column 14 - Warning: inserting missing 'title' element
-Info: Document content looks like HTML 3.2
-3 warnings, 0 errors were found!
+Info: Document content looks like HTML%w%d%S
+%S3 warnings%S0 errors%S
 bool(true)
 Info: Document content looks like HTML 3.2
 No warnings or errors were found.
diff --git a/ext/tidy/tests/016.phpt b/ext/tidy/tests/016.phpt
index 001371a..05b7cc1 100644
--- a/ext/tidy/tests/016.phpt
+++ b/ext/tidy/tests/016.phpt
@@ -4,21 +4,10 @@ Passing configuration file through tidy_parse_file() (may fail with buggy libtid
 <?php if (!extension_loaded("tidy")) print "skip"; ?>
 --FILE--
 <?php
-        $tidy = tidy_parse_file(dirname(__FILE__)."/016.html", dirname(__FILE__)."/016.tcfg");
-    	tidy_clean_repair($tidy);
-        echo tidy_get_output($tidy);
+        $tidy = tidy_parse_file(dirname(__FILE__)."/016.html",
+                                dirname(__FILE__)."/016.tcfg");
+        $cfg = $tidy->getConfig();
+        echo $cfg["clean"];
 ?>
 --EXPECT--
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
-<html>
-<head>
-<title></title>
-
-<style type="text/css">
- p.c1 {font-weight: bold}
-</style>
-</head>
-<body>
-<p class="c1">testing</p>
-</body>
-</html>
+1
diff --git a/ext/tidy/tests/017.phpt b/ext/tidy/tests/017.phpt
index ba620a3..d27a42f 100644
--- a/ext/tidy/tests/017.phpt
+++ b/ext/tidy/tests/017.phpt
@@ -5,8 +5,8 @@ The Tidy Output Buffer Filter
 --FILE--
 <?php ob_start("ob_tidyhandler"); ?>
 <B>testing</I>
---EXPECT--
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
+--EXPECTF--
+<!DOCTYPE html%S>
 <html>
 <head>
 <title></title>
@@ -14,4 +14,4 @@ The Tidy Output Buffer Filter
 <body>
 <b>testing</b>
 </body>
-</html>
\ No newline at end of file
+</html>
diff --git a/ext/tidy/tests/024.phpt b/ext/tidy/tests/024.phpt
index b09f5b4..6a258b3 100644
--- a/ext/tidy/tests/024.phpt
+++ b/ext/tidy/tests/024.phpt
@@ -13,28 +13,27 @@ if (strtotime(tidy_get_release()) < strtotime('20 january 2007')) die ('skip old
 $contents = '
 <wps:block>
 <wps:var>
-<wps:value/>
+<wps:value></wps:value>
 </wps:var>
 </wps:block>';
 
 $config = array(
+'doctype' => 'omit',
 'new-blocklevel-tags' => 'wps:block,wps:var,wps:value',
 'newline' => 'LF'
 );
 
 $tidy = tidy_parse_string($contents, $config, 'utf8');
 $tidy->cleanRepair();
-
-var_dump($tidy->value);
+echo $tidy;
 
 ?>
 --EXPECTF--
-string(11%d) "<html>
+<html>
 <head>
 <title></title>
 </head>
 <body>
-<wps:block>%w<wps:var>
-<wps:value></wps:var>%w</wps:block>
+<wps:block>%w<wps:var>%w<wps:value></wps:value>%w</wps:var>%w</wps:block>
 </body>
-</html>"
+</html>
diff --git a/ext/tidy/tests/026.phpt b/ext/tidy/tests/026.phpt
index 24a1e6f..b46cd54 100644
--- a/ext/tidy/tests/026.phpt
+++ b/ext/tidy/tests/026.phpt
@@ -12,8 +12,8 @@ echo '<p>xpto</p>';
 
 ?>
 </html>
---EXPECT--
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
+--EXPECTF--
+<!DOCTYPE html%S>
 <html>
 <head>
 <title></title>
diff --git a/ext/tidy/tests/030.phpt b/ext/tidy/tests/030.phpt
index c351f9a..f29d6ee 100644
--- a/ext/tidy/tests/030.phpt
+++ b/ext/tidy/tests/030.phpt
@@ -12,18 +12,15 @@ $buffer = '<html></html>';
 $config = array(
   'indent' => true, // AutoBool
   'indent-attributes' => true, // Boolean
-  'indent-spaces' => 3, // Integer
-  'language' => 'de'); // String
+  'indent-spaces' => 3); // Integer
 $tidy = new tidy();
 $tidy->parseString($buffer, $config);
 $c = $tidy->getConfig();
 var_dump($c['indent']);
 var_dump($c['indent-attributes']);
 var_dump($c['indent-spaces']);
-var_dump($c['language']);
 ?>
---EXPECTF--
+--EXPECT--
 int(1)
 bool(true)
 int(3)
-%s(2) "de"
diff --git a/ext/xsl/tests/xslt010.phpt b/ext/xsl/tests/xslt010.phpt
index 96ef8c6..aeedabc 100644
--- a/ext/xsl/tests/xslt010.phpt
+++ b/ext/xsl/tests/xslt010.phpt
@@ -1,11 +1,12 @@
 --TEST--
 Test 10: EXSLT Support
 --SKIPIF--
-<?php 
+<?php
 require_once dirname(__FILE__) .'/skipif.inc';
 $proc = new xsltprocessor;
 if (!$proc->hasExsltSupport()) die('skip EXSLT support not available');
 if (LIBXSLT_VERSION < 10117) die('skip too old libxsl');
+if (LIBXSLT_VERSION > 10129) die('skip for libxsl < 10130');
 ?>
 --FILE--
 <?php
@@ -15,10 +16,10 @@ $dom = new domDocument();
   $dom->load(dirname(__FILE__)."/exslt.xsl");
   $proc = new xsltprocessor;
   $xsl = $proc->importStylesheet($dom);
-  
+
   $xml = new DomDocument();
   $xml->load(dirname(__FILE__)."/exslt.xml");
-  
+
   print $proc->transformToXml($xml);
 --EXPECT--
 Test 10: EXSLT Support
@@ -203,4 +204,3 @@ Test 10: EXSLT Support
     hour-in-day          : NaN
     minute-in-hour       : NaN
     second-in-minute     : NaN
-
